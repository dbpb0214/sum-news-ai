{"ast":null,"code":"const STORAGE_KEY = 'news-summary-history';\nexport const saveToHistory = summary => {\n  try {\n    const existingHistory = getHistory();\n    const isDuplicate = existingHistory.some(item => item.originalUrl === summary.originalUrl);\n    if (!isDuplicate) {\n      const updatedHistory = [summary, ...existingHistory].slice(0, 10); // Keep only latest 10 items\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedHistory));\n    }\n  } catch (error) {\n    console.error('Error saving to history: ', error);\n  }\n};\nexport const getHistory = () => {\n  try {\n    const history = localStorage.getItem(STORAGE_KEY);\n    return history ? JSON.parse(history) : [];\n  } catch (error) {\n    console.error('Error retrieving history: ', error);\n    return [];\n  }\n};\nexport const clearHistory = () => {\n  try {\n    localStorage.removeItem(STORAGE_KEY);\n  } catch (error) {\n    console.error('Error clearing history: ', error);\n  }\n};","map":{"version":3,"names":["STORAGE_KEY","saveToHistory","summary","existingHistory","getHistory","isDuplicate","some","item","originalUrl","updatedHistory","slice","localStorage","setItem","JSON","stringify","error","console","history","getItem","parse","clearHistory","removeItem"],"sources":["/Users/desmond/Desmond_Files/ai-playground/sum-news/frontend/src/utils/storage.ts"],"sourcesContent":["import { SummaryResult } from \"../types\";\n\nconst STORAGE_KEY = 'news-summary-history';\n\nexport const saveToHistory = (summary: SummaryResult): void => {\n    try {\n        const existingHistory = getHistory();\n        const isDuplicate = existingHistory.some(item => item.originalUrl === summary.originalUrl);\n\n        if (!isDuplicate) {\n            const updatedHistory = [summary, ...existingHistory].slice(0, 10) // Keep only latest 10 items\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedHistory))\n        }\n    } catch (error) {\n        console.error('Error saving to history: ', error)\n    }\n};\n\nexport const getHistory = (): SummaryResult[] => {\n    try {\n        const history = localStorage.getItem(STORAGE_KEY);\n        return history ? JSON.parse(history) : [];\n    } catch (error) {\n        console.error('Error retrieving history: ', error);\n        return [];\n    }\n}\n\nexport const clearHistory = (): void => {\n    try {\n        localStorage.removeItem(STORAGE_KEY);\n    } catch (error) {\n        console.error('Error clearing history: ', error)\n    }\n}\n"],"mappings":"AAEA,MAAMA,WAAW,GAAG,sBAAsB;AAE1C,OAAO,MAAMC,aAAa,GAAIC,OAAsB,IAAW;EAC3D,IAAI;IACA,MAAMC,eAAe,GAAGC,UAAU,CAAC,CAAC;IACpC,MAAMC,WAAW,GAAGF,eAAe,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,WAAW,KAAKN,OAAO,CAACM,WAAW,CAAC;IAE1F,IAAI,CAACH,WAAW,EAAE;MACd,MAAMI,cAAc,GAAG,CAACP,OAAO,EAAE,GAAGC,eAAe,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC;MAClEC,YAAY,CAACC,OAAO,CAACZ,WAAW,EAAEa,IAAI,CAACC,SAAS,CAACL,cAAc,CAAC,CAAC;IACrE;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACJ,CAAC;AAED,OAAO,MAAMX,UAAU,GAAGA,CAAA,KAAuB;EAC7C,IAAI;IACA,MAAMa,OAAO,GAAGN,YAAY,CAACO,OAAO,CAAClB,WAAW,CAAC;IACjD,OAAOiB,OAAO,GAAGJ,IAAI,CAACM,KAAK,CAACF,OAAO,CAAC,GAAG,EAAE;EAC7C,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAAA,KAAY;EACpC,IAAI;IACAT,YAAY,CAACU,UAAU,CAACrB,WAAW,CAAC;EACxC,CAAC,CAAC,OAAOe,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}